---
apiVersion: v1
kind: Template
metadata:
  name: approval-process
objects:
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: approval-pam-secrets
  stringData:
    kie-admin-user: "${KIE_ADMIN_USER}"
    kie-admin-pwd: "${KIE_ADMIN_PASSWORD}"
    kie-server-user: "${KIE_SERVER_USER}"
    kie-server-pwd: "${KIE_SERVER_PASSWORD}"
    backoffice-token: xyz
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: keystore
  stringData:
    keystore_password: password
    backoffice.jks: jks
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: approval-process
  spec:
    envName: ${ENV_NAME}
    deployments:
    - name: pam
      minReplicas: ${{MIN_REPLICAS}}
      web: true
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        terminationGracePeriodSeconds: 60
        volumes:
        - name: trust-store
          secret:
            secretName: keystore
            items:
            - key: backoffice.jks
              path: backoffice.jks
        volumeMounts:
        - mountPath: /opt/eap/standalone/configuration/backoffice.jks
          subPath: backoffice.jks
          name: trust-store
        livenessProbe:
          exec:
            command:
            - "/bin/bash"
            - "-c"
            - "echo 'curl --fail --silent -u $KIE_ADMIN_USER:$KIE_ADMIN_PWD http://localhost:8000/services/rest/server/healthcheck' > /tmp/live; bash /tmp/live"
          initialDelaySeconds: 180
          timeoutSeconds: 2
          periodSeconds: 30
          failureThreshold: 20
        readinessProbe:
          exec:
            command:
            - "/bin/bash"
            - "-c"
            - "echo 'curl --fail --silent -u $KIE_ADMIN_USER:$KIE_ADMIN_PWD http://localhost:8000/services/rest/server/readycheck' > /tmp/ready; bash /tmp/ready"
          initialDelaySeconds: 60
          timeoutSeconds: 2
          periodSeconds: 30
          failureThreshold: 20
        env:
        - name: DROOLS_SERVER_FILTER_CLASSES
          value: "true"
        - name: KIE_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: kie-admin-user
        - name: KIE_ADMIN_PWD
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: kie-admin-pwd
        - name: KIE_MBEANS
          value: "enabled"
        - name: KIE_SERVER_CONTROLLER_PROTOCOL
          value: "ws"
        - name: KIE_SERVER_USER
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: kie-server-user
        - name: KIE_SERVER_PWD
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: kie-server-pwd
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keystore
              key: keystore_password
        - name: KIE_SERVER_CONTAINER_DEPLOYMENT
          value: "containerId=com.redhat:approval:1.0.0"
        - name: KIE_SERVER_PERSISTENCE_DS
          value: "java:/jboss/datasources/rhpam"
        - name: DATASOURCES
          value: "RHPAM"
        - name: RHPAM_JNDI
          value: "java:/jboss/datasources/rhpam"
        - name: RHPAM_JTA
          value: "true"
        - name: RHPAM_DRIVER
          value: "postgresql"
        - name: KIE_SERVER_PERSISTENCE_DIALECT
          value: "org.hibernate.dialect.PostgreSQLDialect"
        - name: KIE_SERVER_MGMT_DISABLED
          value: "true"
        - name: KIE_SERVER_STARTUP_STRATEGY
          value: LocalContainersStartupStrategy
        - name: BACKOFFICE_URL
          value: ${BACKOFFICE_SCHEME}://${BACKOFFICE_HOST}:${BACKOFFICE_PORT}/${BACKOFFICE_EMAIL_PATH}
        - name: BACKOFFICE_CLIENT_ID
          value: approval-api
        - name: BACKOFFICE_CLIENT_ENV
          value: ${BACKOFFICE_CLIENT_ENV}
        - name: BACKOFFICE_TOKEN
          valueFrom:
            secretKeyRef:
              name: approval-pam-secrets
              key: backoffice-token
        - name: APPROVAL_API_URL
          value: ${APPROVAL_SCHEME}://${APPROVAL_HOST}:${APPROVAL_PORT}
        - name: APPROVAL_WEB_URL
          value: ${PLATFORM_SCHEME}://${PLATFORM_HOSTNAME}:${PLATFORM_PORT}
        resources:
          limits:
            cpu: 800m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 500Mi
    database:
      name: pam

parameters:
- name: CLOWDER_ENABLED
  description: Determines Clowder deployment
  value: "True"
- name: ENV_NAME
  description: ClowdEnv Name
  required: false
- name: MIN_REPLICAS
  value: '1'
- name: IMAGE
  displayName: Image
  description: Image name
  value: quay.io/cloudservices/approval-pam
- name: IMAGE_TAG
  value: latest
- name: APPROVAL_HOST
  displayName: Approval API Service Host
  description: Host to use for the approval API service URL.
  value: approval-api
- name: APPROVAL_PORT
  displayName: Approval API Service Port
  description: Port to use for the approval API service URL.
  required: true
  value: "8080"
- name: APPROVAL_SCHEME
  displayName: Approval API Service Scheme
  description: Scheme to use for the approval API service URL. Can be either http or https
  required: true
  value: http
- name: PLATFORM_HOSTNAME
  displayName: Approval Web Service Host
  description: Host to use for the approval web URL.
  required: true
  value: ci.cloud.redhat.com
- name: PLATFORM_PORT
  displayName: Approval Web Service Port
  description: Port to use for the approval web service URL.
  required: true
  value: "443"
- name: PLATFORM_SCHEME
  displayName: Approval Web Service Scheme
  description: Scheme to use for the approval web service URL. Can be either http or https
  required: true
  value: https
- name: BACKOFFICE_HOST
  displayName: Back-Office Service Host
  description: Host to use the back-office.
  value: backoffice-proxy-insights-services.ext.us-east.aws.preprod.paas.redhat.com
  required: true
- name: BACKOFFICE_PORT
  displayName: Back-Office Service Port
  description: Port to use for the back-office service URL.
  required: true
  value: "443"
- name: BACKOFFICE_SCHEME
  displayName: Back-Office Service Scheme
  description: Scheme to use for the back-office service URL. Can be either http or https
  required: true
  value: https
- name: BACKOFFICE_EMAIL_PATH
  displayName: Back-Office Email Path
  description: Path to append to the back-office service URL in order to send emails
  required: true
  value: v1/sendEmails
- name: BACKOFFICE_CLIENT_ENV
  displayName: Back-Office Client Environment
  description: Back-office client environment
  value: qa
- name: KIE_SERVER_USER
  displayName: Kie Server Username (Ephemeral)
  required: true
  description: Kie Server Username
  from: "[a-f0-9]{8}"
  generate: expression
- name: KIE_SERVER_PASSWORD
  displayName: Kie Server Password (Ephemeral)
  required: true
  description: Kie Server Password
  from: "[a-f0-9]{7}!"
  generate: expression
- name: KIE_ADMIN_USER
  displayName: Kie Admin Username (Ephemeral)
  required: true
  description: Kie Admin Username
  from: "[a-f0-9]{8}"
  generate: expression
- name: KIE_ADMIN_PASSWORD
  displayName: Kie Admin Password (Ephemeral)
  required: true
  description: Kie Admin Password
  from: "[a-f0-9]{7}!"
  generate: expression

